package com.azizutku.movie.extensions

import com.android.build.api.variant.AndroidComponentsExtension
import kotlinx.kover.gradle.plugin.dsl.KoverReportExtension
import org.gradle.api.Project
import org.gradle.kotlin.dsl.configure

private val coverageExclusions = listOf(
    // Android
    "*Fragment",
    "*Fragment\$*",
    "*Activity",
    "*Activity\$*",
    "*Adapter",
    "*Adapter\$*",
    "*ViewHolder",
    "*ViewHolder\$*",
    "*Dialog",
    "*Dialog\$*",
    "*R.class",
    "*R\$*.class",
    "*.BuildConfig",
    "*Manifest*.*",
    "*.databinding.*",
    "*BR.*",
    "*Test*.*",
    "android/**/*.*",
    // Kotlin
    "*MapperImpl*.*",
    "*Component*.*",
    "*BR*.*",
    "*Manifest*.*",
    "*Args*",
    "*Module*.*",
    "*Dagger*.*",
    "*Hilt*.*",
    "*_HiltModules*",
    "*MembersInjector*.*",
    "*_MembersInjector.class",
    "*_Factory*.*",
    "*_Factory\$*",
    "*_Provide*Factory*.*",
    // Sealed and data classes
    "*$Result.*",
    "*$Result$*.*",
    "*Dto*",
    "*Entity*",
    // Autogenerated classes by 'kotlinx.serialization'
    "*serializer*.*",
    "*LocalDataSourceImpl.*", // Covered in androidTest
)

internal fun Project.configureKover(
    androidComponentsExtension: AndroidComponentsExtension<*, *, *>,
) {
    androidComponentsExtension.onVariants { variant ->
        configure<KoverReportExtension> {
            filters {
                androidReports(variant.name) {
                    filters {
                        excludes {
                            classes(coverageExclusions)
                            packages("*.di", "hilt_aggregated_deps")
                            annotatedBy("*Generated*")
                        }
                    }
                }
            }
        }
    }
}
